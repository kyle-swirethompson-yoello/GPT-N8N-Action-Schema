{
  "openapi": "3.0.0",
  "info": {
    "title": "n8n Public API",
    "version": "1.1.1",
    "description": "API for managing users and workflows in n8n."
  },
  "servers": [
    {
      "url": "https://kyleyoello.app.n8n.cloud/webhook/e30e36fb-9c2e-4a7b-a64a-994ce82b4ca0"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "operationId": "getUsers",
        "summary": "Retrieve all users",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Paginate through users by setting the cursor parameter to a nextCursor attribute returned by a previous request's response.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeRole",
            "in": "query",
            "description": "Whether to include the user's role or not.",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserData"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "getUserById",
        "summary": "Get user by ID/Email",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID or email of the user.",
            "required": true,
            "schema": {
"example": "123e4567-e89b-12d3-a456-426614174000" ,
              "type": "string"
            }
          },
          {
            "name": "includeRole",
            "in": "query",
            "description": "Whether to include the user's role or not.",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "The specified resource was not found."
          }
        }
      }
    },
    "/workflows": {
      "get": {
        "operationId": "getWorkflows",
        "summary": "Retrieve all workflows",
        "parameters": [
          {
            "name": "active",
            "in": "query",
            "description": "Filter by active status of workflows.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Filter workflows by tags.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Paginate through workflows by setting the cursor parameter to a nextCursor attribute returned by a previous request's response.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowData"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/workflows/{id}": {
      "get": {
        "operationId": "getWorkflowById",
        "summary": "Retrieves a workflow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the workflow.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "The specified resource was not found."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserData": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "nextCursor": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "isPending": {
            "type": "boolean"
          },
          "globalRole": {
            "$ref": "#/components/schemas/Role"
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          }
        }
      },
      "WorkflowData": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Workflow"
            }
          },
          "nextCursor": {
            "type": "string"
          }
        }
      },
      "Workflow": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}
